deno-vendor 
Vendor remote modules into a local directory.

Analyzes the provided modules along with their dependencies, downloads
remote modules to the output directory, and produces an import map that
maps remote specifiers to the downloaded files.

  deno vendor main.ts
  deno run --import-map vendor/import_map.json main.ts

Remote modules and multiple modules may also be specified:

  deno vendor main.ts test.deps.ts https://deno.land/std/path/mod.ts

USAGE:
    deno vendor [OPTIONS] <specifiers>...

ARGS:
    <specifiers>...
            

OPTIONS:
    -c, --config <FILE>
            The configuration file can be used to configure different aspects of
            deno including TypeScript, linting, and code formatting. Typically
            the configuration file will be called `deno.json` or `deno.jsonc`
            and automatically detected; in that case this flag is not necessary.
            See
            https://deno.land/manual@v1.25.4/getting_started/configuration_file

        --cert <FILE>
            Load certificate authority from PEM encoded file

    -f, --force
            Forcefully overwrite conflicting files in existing output directory

    -h, --help
            Print help information

        --import-map <FILE>
            Load import map file from local file or remote URL.
              Docs:
            https://deno.land/manual@v1.25.4/linking_to_external_code/import_maps
              Specification: https://wicg.github.io/import-maps/
              Examples: https://github.com/WICG/import-maps#the-import-map

        --lock <FILE>
            Check the specified lock file

        --no-config
            Disable automatic loading of the configuration file.

        --output <output>
            The directory to output the vendored modules to

    -q, --quiet
            Suppress diagnostic output

    -r, --reload[=<CACHE_BLOCKLIST>...]
            Reload source code cache (recompile TypeScript)
            --reload
              Reload everything
            --reload=https://deno.land/std
              Reload only standard modules
            --reload=https://deno.land/std/fs/utils.ts,https://deno.land/std/fmt/colors.ts
              Reloads specific modules
            --reload=npm:
              Reload all npm modules
            --reload=npm:chalk
              Reload specific npm module

        --unstable
            Enable unstable features and APIs
