deno-check 
Download and type-check without execution.

  deno check https://deno.land/std/http/file_server.ts

Unless --reload is specified, this command will not re-download already cached
dependencies.

USAGE:
    deno check [OPTIONS] <file>...

ARGS:
    <file>...
            

OPTIONS:
    -c, --config <FILE>
            The configuration file can be used to configure different aspects of
            deno including TypeScript, linting, and code formatting. Typically
            the configuration file will be called `deno.json` or `deno.jsonc`
            and automatically detected; in that case this flag is not necessary.
            See
            https://deno.land/manual@v1.25.4/getting_started/configuration_file

        --cert <FILE>
            Load certificate authority from PEM encoded file

    -h, --help
            Print help information

        --import-map <FILE>
            Load import map file from local file or remote URL.
              Docs:
            https://deno.land/manual@v1.25.4/linking_to_external_code/import_maps
              Specification: https://wicg.github.io/import-maps/
              Examples: https://github.com/WICG/import-maps#the-import-map

        --lock <FILE>
            Check the specified lock file

        --lock-write
            Write lock file (use with --lock)

        --no-config
            Disable automatic loading of the configuration file.

        --no-npm
            Do not resolve npm modules

        --no-remote
            Do not resolve remote modules

        --node-modules-dir
            Creates a local node_modules folder

    -q, --quiet
            Suppress diagnostic output

    -r, --reload[=<CACHE_BLOCKLIST>...]
            Reload source code cache (recompile TypeScript)
            --reload
              Reload everything
            --reload=https://deno.land/std
              Reload only standard modules
            --reload=https://deno.land/std/fs/utils.ts,https://deno.land/std/fmt/colors.ts
              Reloads specific modules
            --reload=npm:
              Reload all npm modules
            --reload=npm:chalk
              Reload specific npm module

        --remote
            Type-check all modules, including remote

        --unstable
            Enable unstable features and APIs
